// <auto-generated />
using System;
using Library.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Library.DataAccess.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20210731200117_SeedImageUrls")]
    partial class SeedImageUrls
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Library.DomainModels.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "William Shakespeare"
                        },
                        new
                        {
                            Id = 2,
                            Name = "George Orwell"
                        },
                        new
                        {
                            Id = 3,
                            Name = "J. K. Rowling"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Steven King"
                        },
                        new
                        {
                            Id = 5,
                            Name = "JRR Tolkein"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Lao Tzu"
                        });
                });

            modelBuilder.Entity("Library.DomainModels.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CreatedOn = new DateTime(2021, 7, 31, 16, 1, 16, 997, DateTimeKind.Local).AddTicks(3190),
                            IsAvailable = false,
                            Title = "Charlemagne"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            CreatedOn = new DateTime(2021, 7, 31, 16, 1, 17, 12, DateTimeKind.Local).AddTicks(7540),
                            IsAvailable = false,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            CreatedOn = new DateTime(2021, 7, 31, 16, 1, 17, 12, DateTimeKind.Local).AddTicks(7640),
                            ImageUrl = "https://libraryimagestore.blob.core.windows.net/images/harrypottersorcerersstone.jpg",
                            IsAvailable = false,
                            Title = "Harry Potter and the Pholisopher's Stone"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 3,
                            CreatedOn = new DateTime(2021, 7, 31, 16, 1, 17, 12, DateTimeKind.Local).AddTicks(9170),
                            IsAvailable = false,
                            Title = "Harry Potter and the Chamber of Secrets"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 1,
                            CreatedOn = new DateTime(2021, 7, 31, 16, 1, 17, 12, DateTimeKind.Local).AddTicks(9220),
                            IsAvailable = false,
                            Title = "Lord of the Rings: The Fellowshihp of the Rings"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 2,
                            CreatedOn = new DateTime(2021, 7, 31, 16, 1, 17, 12, DateTimeKind.Local).AddTicks(9260),
                            IsAvailable = false,
                            Title = "Tao Te Ching"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 3,
                            CreatedOn = new DateTime(2021, 7, 31, 16, 1, 17, 12, DateTimeKind.Local).AddTicks(9280),
                            IsAvailable = false,
                            Title = "The Shining"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 3,
                            CreatedOn = new DateTime(2021, 7, 31, 16, 1, 17, 12, DateTimeKind.Local).AddTicks(9310),
                            IsAvailable = false,
                            Title = "Hamlet"
                        });
                });

            modelBuilder.Entity("Library.DomainModels.LibraryLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Operation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LibraryLogs");
                });

            modelBuilder.Entity("Library.DomainModels.Book", b =>
                {
                    b.HasOne("Library.DomainModels.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
