@model Library.Web.Models.BookCreateViewModel

<h2>Add a new book</h2>
@using (Html.BeginForm("Create", "Books", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "danger", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(m => m.NewBookName)
        @Html.TextBoxFor(m => m.NewBookName, "", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.NewBookName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.NewBookAuthorId)
        @Html.DropDownListFor(m => m.NewBookAuthorId, Model.AuthorSelect, new { @class = "form-control" })
    </div>

    <div class="form-group">
        <label>
            @Html.LabelFor(m => m.NewBookIsAvailable)
            @Html.CheckBoxFor(m => m.NewBookIsAvailable)
        </label>
    </div>

    <div class="form-group">
        <label>
            <p><img id="output" width="200" height="200px" /></p>
            @Html.LabelFor(m => m.NewBookImageFile)
            @Html.TextBoxFor(m => m.NewBookImageFile, new { type = "file", accept = "image/jpeg,  image/jpg" })
            @Html.ValidationMessageFor(model => model.NewBookImageFile, "", new { @class = "text-danger" })
        </label>
    </div>

    <input class="btn btn-success" type="submit" value="submit">
} 
 @* End Form  *@

@* Add Upload Behavior *@
<script>
    var imageInput = document.querySelector("[type=file]")
    var output = document.querySelector("#output")
    imageInput.addEventListener("change", function(e){
        var imageURL = URL.createObjectURL(imageInput.files[0])
        output.src = imageURL;
    })
</script>

